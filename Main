#include<cstring>
#include<queue>
#include<cstdio>
#include<iostream>
#include<memory.h>
using namespace std;
bool visited[15];
bool map[15][15];
void Bfs(int);	
queue<int> qu;
int flag = 0;	
int nodenumber;
int main() {
	int a, b;
	memset(map, 0, sizeof(map));
	memset(visited, 0, sizeof(visited));
	cin >> nodenumber;
	while (1) {
		scanf("%d", &a);
		if (a < 0)
			break;
		scanf("%d", &b);
		map[a][b] = true;
		map[b][a] = true;
	}

	for (int i = 0; i < nodenumber; i++) {
		flag = 0;
		if (visited[i] == false) {
		Bfs(i);
		printf("\n");
		}
	}
	return 0;
}
void Bfs(int nw) {
	qu.push(nw);
	visited[nw] = true;
	while (!qu.empty()) {
		int a = qu.front();
		qu.pop();
		if (flag) {
			printf("-%d", a);
		}
		else {
			flag = 1;
			printf("%d", a);
		}
		for (int i = 0; i < nodenumber; i++) {
			if (map[a][i] == true && visited[i] == false) {
				qu.push(i);
				visited[i] = true;
			}
		}
	}
}
